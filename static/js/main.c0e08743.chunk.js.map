{"version":3,"sources":["assets/logo.svg","assets/left-blob-red.svg","assets/left-blob-green.svg","assets/right-blob-green.svg","assets/bottom-blob-pink.svg","components/App/App.js","components/NavBar/NavBar.js","components/Code/Code.js","components/Design/Design.js","components/Blog/Blog.js","components/About/About.js","components/Contact/Contact.js","components/Resume/Resume.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","src","topLeftImage","alt","leftImage","Container","join","Row","Col","md","span","offset","order","xs","to","logo","bottomImage","rightImage","menuLinks","path","label","renderMenuLink","locationPath","Nav","Item","key","NavBar","useRouteMatch","url","navLinks","menuLink","push","Navbar","bg","collapseOnSelect","expand","Brand","href","width","height","Toggle","aria-controls","Collapse","Code","Design","Blog","About","Contact","Resume","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c0e08743.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.29481673.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-blob-red.d61d31b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-blob-green.66023c67.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-blob-green.d5d1b68f.svg\";","module.exports = __webpack_public_path__ + \"static/media/bottom-blob-pink.ee1f5fb6.svg\";","import React from 'react';\nimport logo from '../../assets/logo.svg';\nimport topLeftImage from '../../assets/left-blob-red.svg';\nimport leftImage from '../../assets/left-blob-green.svg';\nimport rightImage from '../../assets/right-blob-green.svg';\nimport bottomImage from '../../assets/bottom-blob-pink.svg';\nimport './App.scss';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <div>\n      <span className='d-none d-md-block'>\n        <span className='top-left-image'>\n          <img src={topLeftImage} alt='' />\n        </span>\n        <span className='left-image'>\n          <img src={leftImage} alt='' />\n        </span>\n      </span>\n      <Container className={['full-height', 'homepage-container'].join(' ')}>\n        <Row className='full-height'>\n          <Col\n            className={[\n              'center-vertically',\n              'right-align-text',\n              'menu-column',\n            ].join(' ')}\n            md={{ span: '2', offset: '2', order: 1 }}\n            xs={{ span: 6, order: 2 }}>\n            <div>\n              <Link to='/code' className='nav-item'>\n                <h1>CODE</h1>\n              </Link>\n            </div>\n            <div>\n              <Link to='/design' className='nav-item'>\n                <h1>DESIGN</h1>\n              </Link>\n            </div>\n            <div>\n              <Link to='/blog' className='nav-item'>\n                <h1>BLOG</h1>\n              </Link>\n            </div>\n          </Col>\n          <Col\n            className='center-vertically'\n            md={{ span: 4, offset: 0, order: 2 }}\n            xs={{ span: 8, offset: 2, order: 1 }}>\n            <img src={logo} alt='Logo' />\n          </Col>\n          <Col\n            className={['center-vertically', 'menu-column'].join(' ')}\n            md={{ span: 2, order: 3 }}\n            xs={{ span: 6, order: 3 }}>\n            <Link to='/about' className='nav-item'>\n              <h1>ABOUT</h1>\n            </Link>\n            <Link to='/contact' className='nav-item'>\n              <h1>CONTACT</h1>\n            </Link>\n            <Link to='/resume' className='nav-item'>\n              <h1>RESUME</h1>\n            </Link>\n          </Col>\n        </Row>\n      </Container>\n      <span className='bottom-image'>\n        <img src={bottomImage} alt='' />\n      </span>\n      <span className='d-none d-sm-none d-md-block'>\n        <span className='right-image'>\n          <img src={rightImage} alt='' />\n        </span>\n      </span>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FallbackComponent from '../FallbackComponent/FallbackComponent';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport logo from '../../assets/logo.svg';\n\nconst menuLinks = [\n  {\n    path: '/code',\n    label: 'CODE',\n  },\n  {\n    path: '/design',\n    label: 'DESIGN',\n  },\n  {\n    path: '/blog',\n    label: 'BLOG',\n  },\n  {\n    path: '/about',\n    label: 'ABOUT',\n  },\n  {\n    path: '/contact',\n    label: 'CONTACT',\n  },\n  {\n    path: '/resume',\n    label: 'RESUME',\n  },\n];\n\nconst renderMenuLink = (path, label, locationPath) => {\n  const isActive = locationPath === path;\n  const className = isActive ? 'nav-item-active' : 'nav-item';\n\n  return (\n    <Nav.Item key={`nav-${label}`}>\n      <Link to={path} className={className}>\n        <h1>{label}</h1>\n      </Link>\n    </Nav.Item>\n  );\n};\n\nconst NavBar = () => {\n  let { path, url } = useRouteMatch();\n  const isLoading = false;\n  const isReady = !isLoading;\n  let returnHtml = <FallbackComponent componentName='Navigation bar' />;\n\n  if (isLoading) {\n    returnHtml = <div className='loader'>Loading...</div>;\n  }\n\n  if (isReady) {\n    let navLinks = [];\n\n    for (let menuLink of menuLinks) {\n      navLinks.push(renderMenuLink(menuLink.path, menuLink.label, path));\n    }\n\n    returnHtml = (\n      <Navbar bg='light' collapseOnSelect expand='lg'>\n        <Navbar.Brand href='/'>\n          <img src={logo} width='150' height='150' alt='logo' />\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n        <Navbar.Collapse className='right-align-text'>{navLinks}</Navbar.Collapse>\n      </Navbar>\n    );\n  }\n\n  return returnHtml;\n};\n\nNavBar.propTypes = {};\n\nexport default NavBar;\n","import React from 'react';\nimport NavBar from '../NavBar/NavBar';\nimport { Container } from 'react-bootstrap';\n\nfunction Code() {\n  return (\n    <div>\n      <NavBar />\n      <Container>\n        <h1>CODE</h1>\n      </Container>\n    </div>\n  );\n}\n\nexport default Code;","import React from 'react';\nimport NavBar from '../NavBar/NavBar';\nimport { Container } from 'react-bootstrap';\n\nfunction Design() {\n  return (\n    <div>\n      <NavBar />\n      <Container>\n        <h1>DESIGN</h1>\n      </Container>\n    </div>\n  );\n}\n\nexport default Design;","import React from 'react';\nimport NavBar from '../NavBar/NavBar';\nimport { Container } from 'react-bootstrap';\n\nfunction Blog() {\n  return (\n    <div>\n      <NavBar />\n      <Container>\n        <h1>BLOG</h1>\n      </Container>\n    </div>\n  );\n}\n\nexport default Blog;","import React from 'react';\nimport NavBar from '../NavBar/NavBar';\nimport { Container } from 'react-bootstrap';\n\nfunction About() {\n  return (\n    <div>\n      <NavBar />\n      <Container>\n        <h1>ABOUT</h1>\n      </Container>\n    </div>\n  );\n}\n\nexport default About;","import React from 'react';\nimport NavBar from '../NavBar/NavBar';\nimport { Container } from 'react-bootstrap';\n\nfunction Contact() {\n  return (\n    <div>\n      <NavBar />\n      <Container>\n        <h1>CONTACT</h1>\n      </Container>\n    </div>\n  );\n}\n\nexport default Contact;","import React from 'react';\nimport NavBar from '../NavBar/NavBar';\nimport { Container } from 'react-bootstrap';\n\nfunction Resume() {\n  return (\n    <div>\n      <NavBar />\n      <Container>\n        <h1>RESUME</h1>\n      </Container>\n    </div>\n  );\n}\n\nexport default Resume;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport Code from './components/Code/Code';\nimport Design from './components/Design/Design';\nimport Blog from './components/Blog/Blog';\nimport About from './components/About/About';\nimport Contact from './components/Contact/Contact';\nimport Resume from './components/Resume/Resume';\nimport * as serviceWorker from './serviceWorker';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport * as bootstrap from './bootstrap.scss';\nimport 'bootstrap';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/'>\n          <App />\n        </Route>\n        <Route path='/code'>\n          <Code />\n        </Route>\n        <Route path='/design'>\n          <Design />\n        </Route>\n        <Route path='/blog'>\n          <Blog />\n        </Route>\n        <Route path='/about'>\n          <About />\n        </Route>\n        <Route path='/contact'>\n          <Contact />\n        </Route>\n        <Route path='/resume'>\n          <Resume />\n        </Route>\n        <Route path='/'>\n          <App />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}